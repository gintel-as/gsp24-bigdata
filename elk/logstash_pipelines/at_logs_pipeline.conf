input {
   file {
    mode => "read"
    path => "/usr/share/logstash/ingest_data/tsg/*/*/wildfly*/API"
    file_completed_action => "log"
    file_completed_log_path => "/usr/share/logstash/ingest_data/logstash_completed.log"
  }
}

filter {
    grok {
      match => { "message" => ["%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{SPACE}\(%{SYSLOGHOST:thread}\) %{SPACE}%{WORD:class} - %{GREEDYDATA:output}",
                               "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{SPACE}\(%{SYSLOGHOST:thread}\) \[JWT=%{WORD:jwt},GROUP=%{WORD:group},MEMBER=%{WORD:member}] %{WORD:class} - %{GREEDYDATA:output}",
                               "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{SPACE}\(%{SYSLOGHOST:thread}\) \[SAML=%{WORD:saml}] %{WORD:class} - %{GREEDYDATA:output}"]}
    }

    date {
      match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
      target => "time_parsed"
      timezone => "+02:00"
    }
    
    mutate {
      remove_field => ["message","version", "chargeClass", "event.original"]
    }
}

output {
  elasticsearch {
    index => "at_logs"
    hosts=> "${ELASTIC_HOSTS}"
    user=> "${ELASTIC_USER}"
    password=> "${ELASTIC_PASSWORD}"
    cacert=> "certs/ca/ca.crt"
  }
}

